name: Build and Deploy Docker Images to AWS ECR

on:
  push:
    branches:
      - main

jobs:
  build-image:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout Code
        uses: actions/checkout@v4

      - name: Configure AWS Credentials
        uses: aws-actions/configure-aws-credentials@v2
        with:
          aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
          aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          aws-region: us-east-1

      - name: Log in to Amazon ECR
        id: ecr-login
        uses: aws-actions/amazon-ecr-login@v2

      - name: Build, tag, and push FE docker image to Amazon ECR
        env:
          REGISTRY: '861276076873.dkr.ecr.us-east-1.amazonaws.com'
          REPOSITORY: 'frontend-repository'
          IMAGE_TAG: ${{ github.sha }}
        run: |
          docker build -t $REGISTRY/$REPOSITORY:$IMAGE_TAG ./fe
          docker push $REGISTRY/$REPOSITORY:$IMAGE_TAG

      - name: Build, tag, and push BE docker image to Amazon ECR
        env:
          REGISTRY: '861276076873.dkr.ecr.us-east-1.amazonaws.com'
          REPOSITORY: 'backend-repository'
          IMAGE_TAG: ${{ github.sha }}
        run: |
          docker build -t $REGISTRY/$REPOSITORY:$IMAGE_TAG ./be
          docker push $REGISTRY/$REPOSITORY:$IMAGE_TAG

  deploy-to-kubernetes:
    runs-on: ubuntu-latest
    needs: build-image

    steps:
      - name: Checkout Code
        uses: actions/checkout@v4

      - name: Configure AWS Credentials
        uses: aws-actions/configure-aws-credentials@v2
        with:
          aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
          aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          aws-region: us-east-1

      - name: Get latest ECR image
        continue-on-error: true
        id: get-image
        run: |
          echo "fe_image=$(aws ecr describe-images --repository-name frontend-repository --query 'sort_by(imageDetails, &imagePushedAt)[-1].imageTags[0]' --output text)" >> $GITHUB_ENV
          echo "be_image=$(aws ecr describe-images --repository-name backend-repository --query 'sort_by(imageDetails, &imagePushedAt)[-1].imageTags[0]' --output text)" >> $GITHUB_ENV
          echo "fe_image=$fe_image"
          echo "be_image=$be_image"

      - name: Configure kubectl
        continue-on-error: true
        run: |
          aws eks list-clusters --region us-east-1
          aws eks update-kubeconfig --name tecvinson-cluster --region us-east-1
          kubectl config current-context
        working-directory: ./kubernetes

      - name: Deploy to FE Application to Kubernetes
        continue-on-error: true
        run: |
          cat deployment.yaml
          cat service.yaml
          kubectl get services -n kube-system
          kubectl apply -f deployment.yaml
          kubectl apply -f service.yaml
          kubectl apply -f ingress.yaml
          kubectl get deployments
          kubectl get services
        working-directory: ./kubernetes/fe

      - name: Update Secrets for BE
        continue-on-error: true
        run: |
          sed "s/REPLACE_WITH_BASE64_PASSWORD/$(echo -n ${{ secrets.DB_PASSWORD }} | base64)/g" secret.yaml | kubectl apply -f -

      - name: Deploy to BE Application to Kubernetes
        continue-on-error: true
        run: |
          cat deployment.yaml
          cat service.yaml
          kubectl apply -f deployment.yaml
          kubectl apply -f service.yaml
          kubectl get deployments
          kubectl get services
        working-directory: ./kubernetes/be
